{"version":3,"file":"static/js/220.a9034706.chunk.js","mappings":"gNAOA,MA0FA,EA1FwBA,KACtB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,KACpCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAiB,KAC1CG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAiB,KACpCK,EAASC,IAAcN,EAAAA,EAAAA,UAAiB,KACxCO,EAASC,IAAcR,EAAAA,EAAAA,WAAkB,GAC1CS,GAAWC,EAAAA,EAAAA,MA4BjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGN,IAAWO,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACnBD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,aAAYH,UACzBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAeH,UAC5BF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,aAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,sBAAqBH,SAAC,iBAEpCF,EAAAA,EAAAA,MAAA,QAAMM,SAlCIC,UAClBC,EAAEC,iBACFhB,EAAS,IACTE,EAAW,IACXE,GAAW,GACX,IACE,MACMa,SADuBC,EAAAA,EAAAA,IAA2BC,EAAAA,GAAMzB,EAAOG,IAC1CuB,KAAKH,IAE1BI,GAAUC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASN,GAC3BO,QAAiBC,EAAAA,EAAAA,IAAOJ,GAE9B,IAAKG,EAASE,SAAU,MAAM,IAAIC,MAAM,uCAGxC,GAAsB,UADLH,EAASI,OACbC,KAAkB,MAAM,IAAIF,MAAM,+BAE/CzB,EAAW,2CACX4B,YAAW,IAAMzB,EAAS,eAAe,KAC3C,CAAE,MAAO0B,GACP/B,EAAS+B,EAAIC,SAAW,kCAC1B,CAAC,QACC5B,GAAW,EACb,GAWqC6B,YAAU,EAAAxB,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,OAAMH,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOwB,QAAQ,QAAQtB,UAAU,aAAYH,SAAC,mBAC9CC,EAAAA,EAAAA,KAAA,SACEyB,KAAK,QACLC,GAAG,QACHxB,UAAU,eACVyB,YAAY,cACZC,MAAO5C,EACP6C,SAAWxB,GAAMpB,EAASoB,EAAEyB,OAAOF,OACnCG,UAAQ,QAIZlC,EAAAA,EAAAA,MAAA,OAAKK,UAAU,OAAMH,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOwB,QAAQ,WAAWtB,UAAU,aAAYH,SAAC,cACjDC,EAAAA,EAAAA,KAAA,SACEyB,KAAK,WACLC,GAAG,WACHxB,UAAU,eACVyB,YAAY,iBACZC,MAAOzC,EACP0C,SAAWxB,GAAMjB,EAAYiB,EAAEyB,OAAOF,OACtCG,UAAQ,OAIX1C,IAASW,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qBAAoBH,SAAEV,IAC9CE,IAAWS,EAAAA,EAAAA,KAAA,OAAKE,UAAU,sBAAqBH,SAAER,KASlDS,EAAAA,EAAAA,KAAA,UAAQyB,KAAK,SAASvB,UAAU,wBAAwB8B,SAAUvC,EAAQM,SAAC,uB","sources":["pages/Login.tsx"],"sourcesContent":["import { signInWithEmailAndPassword } from 'firebase/auth';\nimport { doc, getDoc } from 'firebase/firestore';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, db } from '../firebase';\nimport Loader from '../components/Loader';\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setLoading(true);\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const uid = userCredential.user.uid;\n\n      const userRef = doc(db, 'users', uid);\n      const userSnap = await getDoc(userRef);\n\n      if (!userSnap.exists()) throw new Error('User record not found in Firestore.');\n\n      const userData = userSnap.data();\n      if (userData.role !== 'admin') throw new Error('Access denied. Admins only.');\n\n      setSuccess('âœ… Logged in successfully as admin!');\n      setTimeout(() => navigate('/dashboard'), 1500);\n    } catch (err: any) {\n      setError(err.message || 'Login failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className=\"login-page\">\n        <div className=\"login-wrapper\">\n          <div className=\"login-card\">\n            <h2 className=\"form-title text-red\">Admin Login</h2>\n\n            <form onSubmit={handleLogin} noValidate>\n              <div className=\"mb-3\">\n                <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </div>\n\n              <div className=\"mb-3\">\n                <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Enter password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </div>\n\n              {error && <div className=\"alert alert-danger\">{error}</div>}\n              {success && <div className=\"alert alert-success\">{success}</div>}\n\n              {/* <button\n                type=\"submit\"\n                className=\"btn btn-primary w-100\"\n                disabled={loading}\n              >\n                {loading ? 'Logging in...' : 'Login'}\n              </button> */}\n              <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={loading}>\n  Login\n</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["Login","email","setEmail","useState","password","setPassword","error","setError","success","setSuccess","loading","setLoading","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","Loader","className","onSubmit","async","e","preventDefault","uid","signInWithEmailAndPassword","auth","user","userRef","doc","db","userSnap","getDoc","exists","Error","data","role","setTimeout","err","message","noValidate","htmlFor","type","id","placeholder","value","onChange","target","required","disabled"],"sourceRoot":""}