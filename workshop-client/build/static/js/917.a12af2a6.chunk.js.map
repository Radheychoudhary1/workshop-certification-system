{"version":3,"file":"static/js/917.a12af2a6.chunk.js","mappings":"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","sources":["pages/StudentFeedbackForm.tsx"],"sourcesContent":["// src/pages/StudentFeedbackForm.tsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getDoc, doc, setDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport bannerImage from '../assets/images/login-bg.jpg';\r\n\r\ninterface FormData {\r\n  collegeName: string;\r\n  workshopName: string;\r\n  dateTime: string;\r\n  instructions: string;\r\n}\r\n\r\nconst StudentFeedbackForm: React.FC = () => {\r\n  const { formId = '' } = useParams<{ formId: string }>();\r\n  const [formDetails, setFormDetails] = useState<FormData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const [name, setName] = useState('');\r\n  const [course, setCourse] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n\r\n  const [showTwilioAlert, setShowTwilioAlert] = useState(false);\r\n  const [twilioAlertShown, setTwilioAlertShown] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchForm = async () => {\r\n      if (!formId) return setLoading(false);\r\n      try {\r\n        const formRef = doc(db, 'workshops', formId);\r\n        const formSnap = await getDoc(formRef);\r\n        if (formSnap.exists()) {\r\n          setFormDetails(formSnap.data() as FormData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching form:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchForm();\r\n  }, [formId]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    try {\r\n      const submissionRef = doc(db, 'submissions', `${formId}_${email}`);\r\n      const existing = await getDoc(submissionRef);\r\n      if (existing.exists()) {\r\n        alert('You have already submitted feedback.');\r\n        return;\r\n      }\r\n\r\n      await setDoc(submissionRef, {\r\n        formId,\r\n        name,\r\n        course,\r\n        phone,\r\n        email,\r\n        feedback,\r\n        timestamp: new Date(),\r\n      });\r\n\r\n      // const res = await fetch('http://localhost:5000/generate-certificate', {\r\n      //   method: 'POST',\r\n      //   headers: { 'Content-Type': 'application/json' },\r\n      //   body: JSON.stringify({ formId, name, course, phone, email }),\r\n      // });\r\n      // âœ… Example usage in StudentFeedbackForm.tsx\r\n      const res = await fetch(`${process.env.REACT_APP_API_BASE}/generate-certificate`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ formId, name, course, phone, email }),\r\n      });\r\n\r\n\r\n      if (!res.ok) {\r\n        const err = await res.json();\r\n        throw new Error(err.message || 'Certificate generation failed');\r\n      }\r\n\r\n      setFormSubmitted(true);\r\n    } catch (error) {\r\n      console.error('Submission error:', error);\r\n      alert('Failed to submit feedback or generate certificate. Please try again.');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPhone(e.target.value);\r\n    if (!twilioAlertShown && e.target.value.trim().length >= 10) {\r\n      setShowTwilioAlert(true);\r\n      setTwilioAlertShown(true);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n        <div className=\"spinner-border text-warning\" role=\"status\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!formDetails) {\r\n    return (\r\n      <div className=\"alert alert-danger text-center mt-5\">\r\n        Invalid or inactive form link.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (formSubmitted) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center vh-100 bg-light\">\r\n        <div className=\"text-center p-5 rounded-4 shadow-sm bg-white border-0\" style={{ maxWidth: '600px' }}>\r\n          <div className=\"mb-4\">\r\n            <div\r\n              className=\"d-inline-flex justify-content-center align-items-center bg-success text-white rounded-circle\"\r\n              style={{ width: '60px', height: '60px', fontSize: '30px' }}\r\n            >\r\n              âœ“\r\n            </div>\r\n          </div>\r\n          <h4 className=\"fw-bold text-dark mb-2\">Thank you! ðŸŽ‰</h4>\r\n          <p className=\"text-secondary mb-3\">\r\n            Your feedback has been successfully submitted.\r\n          </p>\r\n          <p className=\"text-dark fw-medium mb-4\">\r\n            Your certificate will be generated and sent shortly to your verified:\r\n          </p>\r\n          <div className=\"d-flex flex-column align-items-center mb-4\">\r\n            <p className=\"mb-2\">\r\n              <strong className=\"text-dark\">ðŸ“± WhatsApp:</strong>{' '}\r\n              <span className=\"text-secondary\">{phone}</span>\r\n            </p>\r\n            <p className=\"mb-0\">\r\n              <strong className=\"text-dark\">ðŸ“§ Email:</strong>{' '}\r\n              <span className=\"text-secondary\">{email}</span>\r\n            </p>\r\n          </div>\r\n          <hr className=\"my-4\" />\r\n          <p className=\"text-muted small\">\r\n            Please ensure your contact details are correct. For any issues, contact the coordinator.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-light min-vh-100\">\r\n      <div\r\n        className=\"w-100 position-relative\"\r\n        style={{\r\n          height: '220px',\r\n          backgroundImage: `url(${bannerImage})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          borderBottom: '5px solid var(--bs-warning)',\r\n        }}\r\n      >\r\n        <div className=\"position-absolute translate-middle text-white text-center px-3 top-40 start-50\">\r\n          <h2 className=\"fw-bold\" style={{ textShadow: '1px 1px 4px #000' }}>\r\n            Please fill out the details to receive your certificate!\r\n          </h2>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\" style={{ marginTop: '-90px' }}>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-10 col-lg-8\">\r\n            <div className=\"card shadow-sm border-0 p-4 rounded-4 bg-white\">\r\n              <h3 className=\"text-center fw-bold text-warning mb-3\">{formDetails.workshopName}</h3>\r\n              <p className=\"mb-1\"><strong>College:</strong> {formDetails.collegeName}</p>\r\n              <p className=\"mb-3\"><strong>Date & Time:</strong> {formDetails.dateTime}</p>\r\n              {formDetails.instructions && (\r\n                <div className=\"alert alert-info small\">{formDetails.instructions}</div>\r\n              )}\r\n\r\n              {showTwilioAlert && (\r\n                <div className=\"alert alert-warning alert-dismissible fade show small\" role=\"alert\">\r\n                  ðŸ“² To receive your certificate via WhatsApp, please send <strong>\"join angle-particles\"</strong> from the number you entered to{' '}\r\n                  <strong>+1 415 523 8886</strong>.\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-close\"\r\n                    onClick={() => setShowTwilioAlert(false)}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Name</label>\r\n                  <input type=\"text\" className=\"form-control\" value={name} onChange={e => setName(e.target.value)} required />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Course</label>\r\n                  <input type=\"text\" className=\"form-control\" value={course} onChange={e => setCourse(e.target.value)} required />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Phone (+91XXXXXXXXXX)</label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    className=\"form-control\"\r\n                    value={phone}\r\n                    onChange={handlePhoneChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email</label>\r\n                  <input type=\"email\" className=\"form-control\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n                </div>\r\n                <div className=\"mb-4\">\r\n                  <label className=\"form-label\">Feedback</label>\r\n                  <textarea className=\"form-control\" rows={4} value={feedback} onChange={e => setFeedback(e.target.value)} required />\r\n                </div>\r\n                <div className=\"d-grid\">\r\n                  <button type=\"submit\" className=\"btn btn-warning fw-bold\" disabled={submitting}>\r\n                    {submitting ? 'Submitting...' : 'Submit Feedback'}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentFeedbackForm;\r\n"],"names":["StudentFeedbackForm","formId","useParams","formDetails","setFormDetails","useState","loading","setLoading","formSubmitted","setFormSubmitted","submitting","setSubmitting","name","setName","course","setCourse","phone","setPhone","email","setEmail","feedback","setFeedback","showTwilioAlert","setShowTwilioAlert","twilioAlertShown","setTwilioAlertShown","useEffect","async","formRef","doc","db","formSnap","getDoc","exists","data","error","console","fetchForm","_jsx","className","children","role","_jsxs","style","maxWidth","width","height","fontSize","backgroundImage","concat","bannerImage","backgroundSize","backgroundPosition","borderBottom","textShadow","marginTop","workshopName","collegeName","dateTime","instructions","type","onClick","onSubmit","e","preventDefault","submissionRef","alert","setDoc","timestamp","Date","res","fetch","process","method","headers","body","JSON","stringify","ok","err","json","Error","message","value","onChange","target","required","trim","length","rows","disabled"],"sourceRoot":""}