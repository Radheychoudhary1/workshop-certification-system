{"version":3,"file":"static/js/37.4c611b85.chunk.js","mappings":"8MAgBA,MAuFA,EAvFgCA,KAC9B,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAyB,KACpDC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAoBvC,OAlBAG,EAAAA,EAAAA,YAAU,KACeC,WACrB,IACE,MAAMC,GAAiBC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,eAChCC,GAAIC,EAAAA,EAAAA,GAAMJ,GAAgBK,EAAAA,EAAAA,IAAM,SAAU,KAAMd,IAEhDe,SADiBC,EAAAA,EAAAA,IAAQJ,IACTK,KAAKC,KAAKC,GAAQA,EAAIJ,SAC5CZ,EAAaY,EACf,CAAE,MAAOK,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,CAAC,QACCd,GAAW,EACb,GAGFgB,KACC,CAACtB,KAGFuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wDAAuDC,SAAA,EAEpEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+FAA8FC,SAAA,EAC3GC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UACvCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,SAAQC,SAAC,mCAEzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,GAAG,aACHJ,UAAU,wDAAuDC,SAClE,mCAOLC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAAyBC,UACtCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACvBpB,GACCqB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wDAAuDC,UACpEC,EAAAA,EAAAA,KAACG,EAAAA,EAAM,MAEc,IAArB3B,EAAU4B,QACZJ,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,SAAC,uCAI7CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,gDAA+CC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UAC3BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACGvB,EAAUgB,KAAI,CAACa,EAAMC,KACpBT,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKE,QACVP,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKG,UACVR,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKI,SACVT,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKK,SACVV,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEM,EAAKM,YACjCX,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qBAAoBC,SAC/B,IAAIa,KAA8B,IAAzBP,EAAKQ,UAAUC,SAAgBC,qBAPpCT,mB","sources":["pages/FormResponses.tsx"],"sourcesContent":["// src/pages/FormResponses.tsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport Loader from '../components/Loader';\n\ninterface FeedbackData {\n  name: string;\n  course: string;\n  phone: string;\n  email: string;\n  feedback: string;\n  timestamp: { seconds: number; nanoseconds: number };\n}\n\nconst FormResponses: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const [responses, setResponses] = useState<FeedbackData[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchResponses = async () => {\n      try {\n        const submissionsRef = collection(db, 'submissions');\n        const q = query(submissionsRef, where('formId', '==', id));\n        const snapshot = await getDocs(q);\n        const data = snapshot.docs.map((doc) => doc.data() as FeedbackData);\n        setResponses(data);\n      } catch (error) {\n        console.error('Error fetching responses:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchResponses();\n  }, [id]);\n\n  return (\n    <div className=\"container-fluid bg-light min-vh-100 py-4 px-3 px-md-5\">\n      {/* Header */}\n      <div className=\"row align-items-center justify-content-between mb-4 bg-dark text-white p-3 rounded shadow-sm\">\n        <div className=\"col-md-auto mb-2 mb-md-0\">\n          <h1 className=\"h5 m-0\">üìã Form Responses</h1>\n        </div>\n        <div className=\"col-md-auto\">\n          <Link\n            to=\"/dashboard\"\n            className=\"btn btn-warning text-dark fw-semibold w-100 w-md-auto\"\n          >\n            ‚Üê Back to Dashboard\n          </Link>\n        </div>\n      </div>\n\n      {/* Main Card */}\n      <div className=\"card shadow-sm border-0\">\n        <div className=\"card-body\">\n          {loading ? (\n            <div className=\"d-flex justify-content-center align-items-center py-5\">\n              <Loader />\n            </div>\n          ) : responses.length === 0 ? (\n            <div className=\"text-center text-muted py-4\">\n              No responses found for this form.\n            </div>\n          ) : (\n            <div className=\"table-responsive\">\n              <table className=\"table table-bordered align-middle text-center\">\n                <thead className=\"table-dark\">\n                  <tr>\n                    <th>Name</th>\n                    <th>Course</th>\n                    <th>Phone</th>\n                    <th>Email</th>\n                    <th>Feedback</th>\n                    <th>Submitted At</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {responses.map((resp, idx) => (\n                    <tr key={idx}>\n                      <td>{resp.name}</td>\n                      <td>{resp.course}</td>\n                      <td>{resp.phone}</td>\n                      <td>{resp.email}</td>\n                      <td className=\"text-start\">{resp.feedback}</td>\n                      <td className=\"white-space-nowrap\">\n                        {new Date(resp.timestamp.seconds * 1000).toLocaleString()}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormResponses;\n"],"names":["FormResponses","id","useParams","responses","setResponses","useState","loading","setLoading","useEffect","async","submissionsRef","collection","db","q","query","where","data","getDocs","docs","map","doc","error","console","fetchResponses","_jsxs","className","children","_jsx","Link","to","Loader","length","resp","idx","name","course","phone","email","feedback","Date","timestamp","seconds","toLocaleString"],"sourceRoot":""}