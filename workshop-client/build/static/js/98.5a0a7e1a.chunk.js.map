{"version":3,"file":"static/js/98.5a0a7e1a.chunk.js","mappings":"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","sources":["components/Pagination.tsx","pages/Dashboard.tsx"],"sourcesContent":["// src/components/Pagination.tsx\nimport React from 'react';\n\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n}\n\nconst Pagination: React.FC<PaginationProps> = ({ currentPage, totalPages, onPageChange }) => {\n  if (totalPages <= 1) return null;\n\n  const handlePrev = () => {\n    if (currentPage > 1) onPageChange(currentPage - 1);\n  };\n\n  const handleNext = () => {\n    if (currentPage < totalPages) onPageChange(currentPage + 1);\n  };\n\n  const getPageNumbers = () => {\n    const pages = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push(i);\n    }\n    return pages;\n  };\n\n  return (\n    <nav className=\"pagination-wrapper d-flex justify-content-center mt-4\">\n      <ul className=\"pagination custom-pagination\">\n        <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n          <button className=\"page-link\" onClick={handlePrev}>Prev</button>\n        </li>\n        {getPageNumbers().map((page) => (\n          <li key={page} className={`page-item ${page === currentPage ? 'active' : ''}`}>\n            <button className=\"page-link\" onClick={() => onPageChange(page)}>{page}</button>\n          </li>\n        ))}\n        <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\n          <button className=\"page-link\" onClick={handleNext}>Next</button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","// src/pages/Dashboard.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { signOut } from 'firebase/auth';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { auth, db } from '../firebase';\r\nimport Loader from '../components/Loader';\r\nimport Pagination from '../components/Pagination';\r\n\r\ninterface FormData {\r\n  id: string;\r\n  collegeName: string;\r\n  workshopName: string;\r\n  dateTime: string;\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [forms, setForms] = useState<FormData[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showLogoutConfirm, setShowLogoutConfirm] = useState(false);\r\n  const itemsPerPage = 6;\r\n\r\n  const performLogout = async () => {\r\n    await signOut(auth);\r\n    navigate('/');\r\n  };\r\n\r\n  const handleLogoutClick = () => {\r\n    setShowLogoutConfirm(true);\r\n  };\r\n\r\n  const handleCancelLogout = () => {\r\n    setShowLogoutConfirm(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchForms = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, 'workshops'));\r\n        const fetchedForms: FormData[] = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          fetchedForms.push({\r\n            id: doc.id,\r\n            collegeName: data.collegeName,\r\n            workshopName: data.workshopName,\r\n            dateTime: data.dateTime,\r\n          });\r\n        });\r\n        setForms(fetchedForms);\r\n      } catch (error) {\r\n        console.error(\"Error fetching forms:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchForms();\r\n  }, []);\r\n\r\n  const paginatedForms = forms.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n  const totalPages = Math.ceil(forms.length / itemsPerPage);\r\n\r\n  return (\r\n    <div className=\"dashboard container-fluid bg-light min-vh-100 py-4 px-3 px-md-5\">\r\n      {/* Header */}\r\n      <div className=\"d-flex justify-content-between align-items-center mb-4 bg-dark text-white p-3 rounded shadow-sm\">\r\n        <h1 className=\"h4 m-0\">üéì Admin Dashboard</h1>\r\n        <button className=\"btn btn-warning text-dark fw-semibold\" onClick={handleLogoutClick}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      {/* Logout Confirmation Modal */}\r\n      {showLogoutConfirm && (\r\n        <div className=\"modal fade show d-block\" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content rounded-4 shadow border-0\">\r\n              <div className=\"modal-header bg-dark text-white rounded-top-4\">\r\n                <h5 className=\"modal-title\">Confirm Logout</h5>\r\n              </div>\r\n              <div className=\"modal-body text-dark\">\r\n                Are you sure you want to logout?\r\n              </div>\r\n              <div className=\"modal-footer d-flex justify-content-end gap-2\">\r\n                <button className=\"btn btn-sm btn-outline-secondary\" onClick={handleCancelLogout}>\r\n                  Cancel\r\n                </button>\r\n                <button className=\"btn btn-sm btn-warning fw-semibold text-dark\" onClick={performLogout}>\r\n                  Yes, Logout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main Card */}\r\n      <div className=\"card shadow-sm border-0\">\r\n        <div className=\"card-body\">\r\n          <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4\">\r\n            <h2 className=\"h5 fw-bold text-dark mb-2 mb-md-0\">All Workshops</h2>\r\n            <Link to=\"/dashboard/create\" className=\"btn btn-dark text-warning fw-semibold\">\r\n              + Create New Form\r\n            </Link>\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"d-flex justify-content-center align-items-center py-5\">\r\n              <Loader />\r\n            </div>\r\n          ) : forms.length === 0 ? (\r\n            <div className=\"text-center text-muted py-4\">\r\n              No forms created yet. Start by clicking <strong>‚ÄúCreate New Form‚Äù</strong>.\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"row\">\r\n                {paginatedForms.map((form) => (\r\n                  <div className=\"col-12 col-md-6 col-lg-4 mb-4\" key={form.id}>\r\n                    <div className=\"card h-100 shadow-sm border-start border-4 border-warning\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title text-dark\">{form.workshopName}</h5>\r\n                        <p className=\"mb-1\"><strong>College:</strong> {form.collegeName}</p>\r\n                        <p className=\"mb-2\"><strong>Date & Time:</strong> {form.dateTime}</p>\r\n                        <Link\r\n                          to={`/dashboard/form/${form.id}`}\r\n                          className=\"btn btn-sm btn-outline-warning fw-semibold\"\r\n                        >\r\n                          View Responses\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {forms.length > itemsPerPage && (\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  totalPages={totalPages}\r\n                  onPageChange={setCurrentPage}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","currentPage","totalPages","onPageChange","_jsx","className","children","_jsxs","concat","onClick","handlePrev","getPageNumbers","pages","i","push","map","page","handleNext","Dashboard","navigate","useNavigate","forms","setForms","useState","loading","setLoading","setCurrentPage","showLogoutConfirm","setShowLogoutConfirm","useEffect","async","querySnapshot","getDocs","collection","db","fetchedForms","forEach","doc","data","id","collegeName","workshopName","dateTime","error","console","fetchForms","paginatedForms","slice","Math","ceil","length","handleLogoutClick","style","backgroundColor","handleCancelLogout","signOut","auth","Link","to","Loader","_Fragment","form","Pagination"],"sourceRoot":""}